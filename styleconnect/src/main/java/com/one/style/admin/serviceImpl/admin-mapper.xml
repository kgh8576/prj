<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.one.style.admin.mapper.AdminMapper">

<!-- 일반회원 관리 -->
	 
	 <!-- 일반 회원관리 페이지: 멤버 리스트를 반환. 1 페이지당 10건으로 페이징 처리함-->
	<select id="memberListSelect"
		parameterType="com.one.style.mem.vo.MemberVO"
		resultType="com.one.style.mem.vo.MemberVO">
		
		select b.* 
			from( 
                select rownum rn, a.* 
                  from(
                    select id, <!-- 아이디 -->
                           pw, <!-- 비밀번호-->
                          name, <!-- 이름 -->
                          gender, <!-- 성별 -->
                          to_char(birth, 'YYYY-mm-dd') as birth, <!-- 형식 변경한 생년월일(ex)2021-01-01) -->
                          REGEXP_REPLACE(hp, '(.{3})(.+)(.{4})', '\1-\2-\3') as hp, <!-- 형식 변경한 휴대폰 번호(ex)010-1111-1111) --> 
                          point, <!-- 적립금 -->
                          to_char(regday, 'YYYY-mm-dd') as regday<!-- 형식변경한 가입일 -->
						from member
						<if test="id != null and id != ''"> 
						where member.id = #{id} <!-- 일반회원 ID로 서치할 시 추가 검색-->
						</if>
  					)a ) b 
  			where b.rn between #{firstCnt} and #{lastCnt} <!-- 페이징 정보 -->
		
	</select>
	
	
	<!-- 일반회원 관리 페이지: 페이징 처리를 위한 디자이너 테이블의 총 행수 반환-->
	<select id="memberListTotalCountSelect" 
		resultType="Integer">
		select count(*) from member
	</select>
	
	
	<!-- 일반회원 상담내역 수정 폼 모달: 한 명의 멤버의 상담내역을 반환. 1 페이지당 10건으로 페이징 처리함-->
	<select id="memberConHistoryListSelect"
		parameterType="com.one.style.conhistory.vo.ConHistoryVO"
		resultType="com.one.style.conhistory.vo.ConHistoryVO">
		
		select b.* 
  			from( 
       			select rownum rn, a.* 
        			from( 
                  		select con_no,
                  				to_char(day, 'YYYY-mm-dd') as day, 
                  				time,		
                  				TRUNC((TO_DATE(CONCAT(day, time), 'YY/MM/DDHH24:mi')-sysdate)*24*60) as remaining_time, 
                  				designer.id as des_id, 
                  				mem_id,
                  				title, 
                  				detail,
                  				mem_comment,
                  				des_comment,            		
                        		mem_attend,
                        		des_attend, 
                  				codecontent as state 
                    		from consulting_history, des_course, designer, commcodedetail
                    		where consulting_history.cour_no = des_course.cour_no 
                      			and des_course.id = designer.id 
                      			and consulting_history.state = commcodedetail.code 
                      			<if test="state != null and state != ''"> 
								and commcodedetail.codecontent = #{state} <!-- select 박스로 상태 선택시 추가 검색-->
								</if>
								<if test="conNo != null and conNo != ''"> 
								and consulting_history.con_no = #{conNo} <!-- 상담번호로 서치할 시 추가 검색-->
								</if>																																					
                      			and consulting_history.mem_id=#{memId}
                    		order by con_no desc
             		)a 
          		) b
  			where b.rn between #{firstCnt} and #{lastCnt}

	</select>
	
	
	<!-- 일반회원 상담내역 수정 폼 모달: 페이징 처리를 위한 컨설팅 히스토리 테이블의 총 행수 반환-->
	<select id="memberConHistoryListTotalCountSelect"
		parameterType="com.one.style.conhistory.vo.ConHistoryVO"
		resultType="Integer">
		select count(*) from consulting_history 
			where mem_id=#{memId}
		<if test="conNo != null and conNo != ''"> 
			and consulting_history.con_no = #{conNo} <!-- 상담번호로 서치할 시 추가 검색-->
		</if>
	</select>
	
	
	<!-- 일반회원 상담내역 수정 폼 모달: 입력값에 따른 업데이트-->
	<update id="memberConHistoryUpdate" parameterType="com.one.style.conhistory.vo.ConHistoryVO">
		update consulting_history set
			 	des_attend = #{desAttend}, 
				mem_attend = #{memAttend}   
		where con_no =#{conNo}
	</update>
<!-- 일반회원 관리 끝-->	
	
	
	
	
	
<!-- 디자이너 관리 -->
	
	<!-- 디자이너 회원 관리 페이지: 디자이너 리스트를 반환. 1 페이지당 10건으로 페이징 처리함-->
	<select id="designerListSelect"
		parameterType="com.one.style.des.vo.DesVO"
		resultType="com.one.style.des.vo.DesVO">
		
		select b.* 
  			from( 
       			select rownum rn, a.* 
        			from(
          				select id,
                  				pw,
                  				name,
                  				gender,
                  				to_char(birth, 'YYYY-MM-DD') as birth,
                  				REGEXP_REPLACE(hp, '(.{3})(.+)(.{4})', '\1-\2-\3') as hp,
                  				location, <!-- 근무처 -->
                  				career,
                  				major_gender,
                  				makeup_yn,
                  				cut_yn,
                  				perm_yn,
                  				dye_yn,
                  				major,
                  				point,
                  				codecontent as state, <!-- 회원 상태(ex)신청, 반려, 승인 등) -->
                  				to_char(regday,'YYYY-MM-DD') as regday,
                  				comments
            			from designer, commcodedetail
            			where designer.state = commcodedetail.code
            			<if test="id != null and id != ''"> 
						and designer.id = #{id} <!-- 디자이너 ID로 서치할 시 추가 검색-->
						</if>	
            			)a ) b
      		where b.rn between #{firstCnt} and #{lastCnt}
      		
	</select>
	
	
	<!-- 디자이너 관리 페이지: 페이징 처리를 위한 디자이너 테이블의 총 행수 반환-->
	<select id="designerListTotalCountSelect" 
		resultType="Integer">
		select count(*) from designer
	</select>
	
	
	<!-- 디자이너 회원 상담내역 수정 폼 모달: 한 명의 디자이너의 상담 내역 리스트 반환, 1 페이지당 10건으로 페이징 처리함-->
	<select id="designerConHistoryListSelect"
		parameterType="com.one.style.conhistory.vo.ConHistoryVO"
		resultType="com.one.style.conhistory.vo.ConHistoryVO">
		
		select b.* 
  			from( 
       			select rownum rn, a.* 
        			from( 
                  		select con_no,
                  				to_char(day, 'YYYY-mm-dd') as day, 
                  				time,		
                  				TRUNC((TO_DATE(CONCAT(day, time), 'YY/MM/DDHH24:mi')-sysdate)*24*60) as remaining_time, 
                  				designer.id as des_id, 
                  				mem_id,
                  				title, 
                  				detail,
                  				mem_comment,
                  				des_comment,            		
                        		mem_attend,
                        		des_attend, 
                  				codecontent as state 
                    		from consulting_history, des_course, designer, commcodedetail
                    		where consulting_history.cour_no = des_course.cour_no 
                      			and des_course.id = designer.id 
                      			and consulting_history.state = commcodedetail.code 
                      			<if test="state != null and state != ''"> 
								and commcodedetail.codecontent = #{state} <!-- select 박스로 상태 선택시 추가 검색-->
								</if>
								<if test="conNo != null and conNo != ''"> 
								and consulting_history.con_no = #{conNo} <!-- 상담번호로 서치할 시 추가 검색-->
								</if>																																	
                      			and des_course.id=#{desId}
                    		order by con_no desc
             		)a 
          		) b
  			where b.rn between #{firstCnt} and #{lastCnt}
		
	</select>
	
	
	<!-- 디자이너 상담내역 수정 폼 모달: 페이징 처리를 위한 컨설팅 히스토리 테이블의 총 행수 반환-->
	<select id="designerConHistoryListTotalCountSelect"
		parameterType="com.one.style.conhistory.vo.ConHistoryVO"
		resultType="Integer">
		select count(*) from consulting_history, des_course 
			where consulting_history.cour_no = des_course.cour_no 
			and id = #{desId}
		<if test="conNo != null and conNo != ''"> 
			and consulting_history.con_no = #{conNo} <!-- 상담번호로 서치할 시 추가 검색-->
		</if>
	</select>
	
	
	<!-- 디자이너 상담내역 수정 폼 모달: 입력 값에 따른 업데이트-->
	<update id="designerConHistoryUpdate" parameterType="com.one.style.conhistory.vo.ConHistoryVO">
		update consulting_history set
			 	des_attend = #{desAttend}, 
				mem_attend = #{memAttend}   
		where con_no =#{conNo}
	</update>
	
	<!-- 디자이너 상태 수정을 위한 폼 모달: 한명의 디자이너에 대해 상태를 포함한 정보 반환 -->
	<select id="designerStateOneSelect" parameterType="com.one.style.des.vo.DesVO" resultType="com.one.style.des.vo.DesVO">
		select id,
               pw,
               name,
               gender,
               to_char(birth, 'YYYY-MM-DD') as birth,
               REGEXP_REPLACE(hp, '(.{3})(.+)(.{4})', '\1-\2-\3') as hp,
               location, 
               career,
               major_gender,
               makeup_yn,
               cut_yn,
               perm_yn,
               dye_yn,
               major,
               point,
               codecontent as state, 
               to_char(regday,'YYYY-MM-DD') as regday,
               comments
        	from designer, commcodedetail
            where designer.state = commcodedetail.code
            	and id=#{id}
	</select>
	
	
	<!-- 디자이너 상태 수정을 위한 폼 모달: 한명의 디자이너에 대한 파일 정보 반환-->
	<select id="designerCertificationFileListSelect" parameterType="com.one.style.files.vo.FilesVO" resultType="com.one.style.files.vo.FilesVO">
		select file_name, 
        		file_uuid,
        		file_state
  			from files 
  			where files.des_id = #{des_id}
    			and file_state = 'cer'
	</select>
	
	
	<!-- 디자이너 상태 수정을 위한 폼 모달: 입력값에 따른 업데이트-->
	<update id="designerStateUpdate" parameterType="com.one.style.des.vo.DesVO">
		update designer set state = (
                            select code 
                              from commcodedetail 
                              where codecontent = #{state}),
                    comments = #{comments}
          where id = #{id}
	</update>
<!-- 디자이너 관리 끝-->
	
</mapper>